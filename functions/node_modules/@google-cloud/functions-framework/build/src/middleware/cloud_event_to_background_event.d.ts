import { Request, Response, NextFunction } from 'express';
export declare const CE_TO_BACKGROUND_TYPE: {
    [k: string]: string;
};
/**
 * Splits a CloudEvent source string into resource and subject components.
 * @param source - The cloud event source
 * @returns The parsed service and name components of the CE source string
 */
export declare const parseSource: (source: string) => {
    service: string;
    name: string;
};
/**
 * Express middleware to convert cloud event requests to legacy GCF events. This enables
 * functions using the "EVENT" signature type to accept requests from a cloud event producer.
 * @param req - Express request object
 * @param res - Express response object
 * @param next - Function used to pass control to the next middle middleware function in the stack
 */
export declare const cloudEventToBackgroundEventMiddleware: (req: Request, res: Response, next: NextFunction) => void;
//# sourceMappingURL=cloud_event_to_background_event.d.ts.map